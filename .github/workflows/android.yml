name: Build & Publish Release APK

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  Gradle:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v2
    - name: setup jdk
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Make Gradle executable
      run: chmod +x ./gradlew
    - name: Build Release APK
      run: ./gradlew assembleDebug&&ls
    name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #GitHub 会自动创建 GITHUB_TOKEN 密码以在工作流程中使用。 
        #您可以使用 GITHUB_TOKEN 在工作流程运行中进行身份验证。
        #当您启用 GitHub Actions 时，GitHub 在您的仓库中安装 GitHub 应用程序。 
        #GITHUB_TOKEN 密码是一种 GitHub 应用程序 安装访问令牌。 
        #您可以使用安装访问令牌代表仓库中安装的 GitHub 应用程序 进行身份验证。 
        #令牌的权限仅限于包含您的工作流程的仓库。 更多信息请参阅“GITHUB_TOKEN 的权限”。
        #在每个作业开始之前， GitHub 将为作业提取安装访问令牌。 令牌在作业完成后过期。
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    # 获取apk版本号
    # 上传至release的资源
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传网址，无需改动
        asset_path: FCL/build/outputs/apk/release/app-release.apk # 上传路径
        asset_name: FCL-debug.apk # 资源名
        asset_content_type: application/vnd.android.package-archiv #资源类型
